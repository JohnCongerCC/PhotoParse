// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhotoParse;

namespace PhotoParse.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PhotoParse.Models.Photo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CameraMaker");

                    b.Property<string>("CameraModel");

                    b.Property<DateTime>("DateTaken");

                    b.Property<string>("Ext");

                    b.Property<string>("FileName");

                    b.Property<string>("Flash");

                    b.Property<string>("FocalLength");

                    b.Property<string>("HResolution");

                    b.Property<int>("Height");

                    b.Property<string>("Latitude");

                    b.Property<string>("Location")
                        .IsRequired();

                    b.Property<string>("Longitude");

                    b.Property<string>("MeteringMode");

                    b.Property<string>("Size");

                    b.Property<string>("ThumbnailLength");

                    b.Property<string>("VResolution");

                    b.Property<int>("Width");

                    b.HasKey("ID");

                    b.ToTable("Photo");
                });

            modelBuilder.Entity("PhotoParse.Models.ToDoList", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int?>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("ToDoList");
                });

            modelBuilder.Entity("PhotoParse.Models.ToDoListItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("Status");

                    b.Property<int?>("ToDoListID");

                    b.HasKey("ID");

                    b.HasIndex("ToDoListID");

                    b.ToTable("ToDoListItem");
                });

            modelBuilder.Entity("PhotoParse.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("PhotoParse.Models.ToDoList", b =>
                {
                    b.HasOne("PhotoParse.Models.User", "User")
                        .WithMany("Lists")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("PhotoParse.Models.ToDoListItem", b =>
                {
                    b.HasOne("PhotoParse.Models.ToDoList", "ToDoList")
                        .WithMany("Items")
                        .HasForeignKey("ToDoListID");
                });
#pragma warning restore 612, 618
        }
    }
}
